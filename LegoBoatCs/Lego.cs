// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Lego.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace Lego
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Server : Ice.Object, ServerOperations_, ServerOperationsNC_
    {
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface Boat : Ice.Object, BoatOperations_, BoatOperationsNC_
    {
    }
}

namespace Lego
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_getActualData(string ret__);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_moveByButton();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_addTargetPosition();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_sendActualPosition();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_addClient();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_start();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_stop();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Server_reset();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Boat_moveByButton();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Boat_addTargetPosition();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Boat_start();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Boat_stop();

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public delegate void Callback_Boat_reset();
}

namespace Lego
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface ServerPrx : Ice.ObjectPrx
    {
        string getActualData();
        string getActualData(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_getActualData> begin_getActualData();
        Ice.AsyncResult<Lego.Callback_Server_getActualData> begin_getActualData(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_getActualData(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_getActualData(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        string end_getActualData(Ice.AsyncResult r__);

        void moveByButton(string direction);
        void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_moveByButton> begin_moveByButton(string direction);
        Ice.AsyncResult<Lego.Callback_Server_moveByButton> begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_moveByButton(string direction, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_moveByButton(Ice.AsyncResult r__);

        void addTargetPosition(float latitude, float longitude);
        void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_addTargetPosition> begin_addTargetPosition(float latitude, float longitude);
        Ice.AsyncResult<Lego.Callback_Server_addTargetPosition> begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_addTargetPosition(Ice.AsyncResult r__);

        void sendActualPosition(float latitude, float longitude, float heading);
        void sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_sendActualPosition> begin_sendActualPosition(float latitude, float longitude, float heading);
        Ice.AsyncResult<Lego.Callback_Server_sendActualPosition> begin_sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_sendActualPosition(float latitude, float longitude, float heading, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_sendActualPosition(Ice.AsyncResult r__);

        void addClient(Ice.Identity id);
        void addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_addClient> begin_addClient(Ice.Identity id);
        Ice.AsyncResult<Lego.Callback_Server_addClient> begin_addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addClient(Ice.Identity id, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_addClient(Ice.AsyncResult r__);

        void start();
        void start(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_start> begin_start();
        Ice.AsyncResult<Lego.Callback_Server_start> begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_start(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_start(Ice.AsyncResult r__);

        void stop();
        void stop(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_stop> begin_stop();
        Ice.AsyncResult<Lego.Callback_Server_stop> begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_stop(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_stop(Ice.AsyncResult r__);

        void reset();
        void reset(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Server_reset> begin_reset();
        Ice.AsyncResult<Lego.Callback_Server_reset> begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_reset(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_reset(Ice.AsyncResult r__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface BoatPrx : Ice.ObjectPrx
    {
        void moveByButton(string direction);
        void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Boat_moveByButton> begin_moveByButton(string direction);
        Ice.AsyncResult<Lego.Callback_Boat_moveByButton> begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_moveByButton(string direction, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_moveByButton(Ice.AsyncResult r__);

        void addTargetPosition(float latitude, float longitude);
        void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Boat_addTargetPosition> begin_addTargetPosition(float latitude, float longitude);
        Ice.AsyncResult<Lego.Callback_Boat_addTargetPosition> begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_addTargetPosition(Ice.AsyncResult r__);

        void start();
        void start(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Boat_start> begin_start();
        Ice.AsyncResult<Lego.Callback_Boat_start> begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_start(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_start(Ice.AsyncResult r__);

        void stop();
        void stop(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Boat_stop> begin_stop();
        Ice.AsyncResult<Lego.Callback_Boat_stop> begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_stop(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_stop(Ice.AsyncResult r__);

        void reset();
        void reset(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Lego.Callback_Boat_reset> begin_reset();
        Ice.AsyncResult<Lego.Callback_Boat_reset> begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_reset(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_reset(Ice.AsyncResult r__);
    }
}

namespace Lego
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface ServerOperations_
    {
        string getActualData(Ice.Current current__);

        void moveByButton(string direction, Ice.Current current__);

        void addTargetPosition(float latitude, float longitude, Ice.Current current__);

        void sendActualPosition(float latitude, float longitude, float heading, Ice.Current current__);

        void addClient(Ice.Identity id, Ice.Current current__);

        void start(Ice.Current current__);

        void stop(Ice.Current current__);

        void reset(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface ServerOperationsNC_
    {
        string getActualData();

        void moveByButton(string direction);

        void addTargetPosition(float latitude, float longitude);

        void sendActualPosition(float latitude, float longitude, float heading);

        void addClient(Ice.Identity id);

        void start();

        void stop();

        void reset();
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface BoatOperations_
    {
        void moveByButton(string direction, Ice.Current current__);

        void addTargetPosition(float latitude, float longitude, Ice.Current current__);

        void start(Ice.Current current__);

        void stop(Ice.Current current__);

        void reset(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface BoatOperationsNC_
    {
        void moveByButton(string direction);

        void addTargetPosition(float latitude, float longitude);

        void start();

        void stop();

        void reset();
    }
}

namespace Lego
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public sealed class ServerPrxHelper : Ice.ObjectPrxHelperBase, ServerPrx
    {
        #region Synchronous operations

        public void addClient(Ice.Identity id)
        {
            addClient(id, null, false);
        }

        public void addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            addClient(id, context__, true);
        }

        private void addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __addClient_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.addClient(id, context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void addTargetPosition(float latitude, float longitude)
        {
            addTargetPosition(latitude, longitude, null, false);
        }

        public void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            addTargetPosition(latitude, longitude, context__, true);
        }

        private void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __addTargetPosition_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.addTargetPosition(latitude, longitude, context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public string getActualData()
        {
            return getActualData(null, false);
        }

        public string getActualData(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            return getActualData(context__, true);
        }

        private string getActualData(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __getActualData_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__(__getActualData_name);
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        return del__.getActualData(context__, observer__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void moveByButton(string direction)
        {
            moveByButton(direction, null, false);
        }

        public void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            moveByButton(direction, context__, true);
        }

        private void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __moveByButton_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.moveByButton(direction, context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void reset()
        {
            reset(null, false);
        }

        public void reset(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            reset(context__, true);
        }

        private void reset(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __reset_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.reset(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void sendActualPosition(float latitude, float longitude, float heading)
        {
            sendActualPosition(latitude, longitude, heading, null, false);
        }

        public void sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            sendActualPosition(latitude, longitude, heading, context__, true);
        }

        private void sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __sendActualPosition_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.sendActualPosition(latitude, longitude, heading, context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void start()
        {
            start(null, false);
        }

        public void start(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            start(context__, true);
        }

        private void start(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __start_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.start(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void stop()
        {
            stop(null, false);
        }

        public void stop(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            stop(context__, true);
        }

        private void stop(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __stop_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        ServerDel_ del__ = (ServerDel_)delBase__;
                        del__.stop(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Lego.Callback_Server_addClient> begin_addClient(Ice.Identity id)
        {
            return begin_addClient(id, null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_addClient> begin_addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addClient(id, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_addClient(Ice.Identity id, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addClient(id, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addClient(id, ctx__, true, cb__, cookie__);
        }

        private const string __addClient_name = "addClient";

        public void end_addClient(Ice.AsyncResult r__)
        {
            end__(r__, __addClient_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_addClient> begin_addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_addClient> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_addClient>(this, __addClient_name, addClient_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__addClient_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                if(id == null)
                {
                    Ice.Identity tmp__ = new Ice.Identity();
                    tmp__.write__(os__);
                }
                else
                {
                    id.write__(os__);
                }
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void addClient_completed__(Lego.Callback_Server_addClient cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_addTargetPosition> begin_addTargetPosition(float latitude, float longitude)
        {
            return begin_addTargetPosition(latitude, longitude, null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_addTargetPosition> begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addTargetPosition(latitude, longitude, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addTargetPosition(latitude, longitude, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addTargetPosition(latitude, longitude, ctx__, true, cb__, cookie__);
        }

        private const string __addTargetPosition_name = "addTargetPosition";

        public void end_addTargetPosition(Ice.AsyncResult r__)
        {
            end__(r__, __addTargetPosition_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_addTargetPosition> begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_addTargetPosition> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_addTargetPosition>(this, __addTargetPosition_name, addTargetPosition_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__addTargetPosition_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeFloat(latitude);
                os__.writeFloat(longitude);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void addTargetPosition_completed__(Lego.Callback_Server_addTargetPosition cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_getActualData> begin_getActualData()
        {
            return begin_getActualData(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_getActualData> begin_getActualData(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_getActualData(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_getActualData(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getActualData(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_getActualData(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_getActualData(ctx__, true, cb__, cookie__);
        }

        private const string __getActualData_name = "getActualData";

        public string end_getActualData(Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __getActualData_name);
            bool ok__ = outAsync__.wait__();
            try
            {
                if(!ok__)
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                string ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                ret__ = is__.readString();
                outAsync__.endReadParams__();
                return ret__;
            }
            catch(Ice.LocalException ex)
            {
                Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                if(obsv__ != null)
                {
                    obsv__.failed(ex.ice_name());
                }
                throw ex;
            }
        }

        private Ice.AsyncResult<Lego.Callback_Server_getActualData> begin_getActualData(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__getActualData_name);
            IceInternal.TwowayOutgoingAsync<Lego.Callback_Server_getActualData> result__ =  new IceInternal.TwowayOutgoingAsync<Lego.Callback_Server_getActualData>(this, __getActualData_name, getActualData_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__getActualData_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void getActualData_completed__(Ice.AsyncResult r__, Lego.Callback_Server_getActualData cb__, Ice.ExceptionCallback excb__)
        {
            string ret__;
            try
            {
                ret__ = end_getActualData(r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__);
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_moveByButton> begin_moveByButton(string direction)
        {
            return begin_moveByButton(direction, null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_moveByButton> begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_moveByButton(direction, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_moveByButton(string direction, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveByButton(direction, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveByButton(direction, ctx__, true, cb__, cookie__);
        }

        private const string __moveByButton_name = "moveByButton";

        public void end_moveByButton(Ice.AsyncResult r__)
        {
            end__(r__, __moveByButton_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_moveByButton> begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_moveByButton> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_moveByButton>(this, __moveByButton_name, moveByButton_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__moveByButton_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeString(direction);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void moveByButton_completed__(Lego.Callback_Server_moveByButton cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_reset> begin_reset()
        {
            return begin_reset(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_reset> begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_reset(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_reset(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_reset(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_reset(ctx__, true, cb__, cookie__);
        }

        private const string __reset_name = "reset";

        public void end_reset(Ice.AsyncResult r__)
        {
            end__(r__, __reset_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_reset> begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_reset> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_reset>(this, __reset_name, reset_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__reset_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void reset_completed__(Lego.Callback_Server_reset cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_sendActualPosition> begin_sendActualPosition(float latitude, float longitude, float heading)
        {
            return begin_sendActualPosition(latitude, longitude, heading, null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_sendActualPosition> begin_sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_sendActualPosition(latitude, longitude, heading, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_sendActualPosition(float latitude, float longitude, float heading, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendActualPosition(latitude, longitude, heading, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_sendActualPosition(latitude, longitude, heading, ctx__, true, cb__, cookie__);
        }

        private const string __sendActualPosition_name = "sendActualPosition";

        public void end_sendActualPosition(Ice.AsyncResult r__)
        {
            end__(r__, __sendActualPosition_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_sendActualPosition> begin_sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_sendActualPosition> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_sendActualPosition>(this, __sendActualPosition_name, sendActualPosition_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__sendActualPosition_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeFloat(latitude);
                os__.writeFloat(longitude);
                os__.writeFloat(heading);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void sendActualPosition_completed__(Lego.Callback_Server_sendActualPosition cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_start> begin_start()
        {
            return begin_start(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_start> begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_start(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_start(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_start(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_start(ctx__, true, cb__, cookie__);
        }

        private const string __start_name = "start";

        public void end_start(Ice.AsyncResult r__)
        {
            end__(r__, __start_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_start> begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_start> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_start>(this, __start_name, start_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__start_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void start_completed__(Lego.Callback_Server_start cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Server_stop> begin_stop()
        {
            return begin_stop(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Server_stop> begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_stop(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_stop(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_stop(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_stop(ctx__, true, cb__, cookie__);
        }

        private const string __stop_name = "stop";

        public void end_stop(Ice.AsyncResult r__)
        {
            end__(r__, __stop_name);
        }

        private Ice.AsyncResult<Lego.Callback_Server_stop> begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_stop> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Server_stop>(this, __stop_name, stop_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__stop_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void stop_completed__(Lego.Callback_Server_stop cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static ServerPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ServerPrx r = b as ServerPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                ServerPrxHelper h = new ServerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ServerPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            ServerPrx r = b as ServerPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                ServerPrxHelper h = new ServerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ServerPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    ServerPrxHelper h = new ServerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ServerPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    ServerPrxHelper h = new ServerPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static ServerPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            ServerPrx r = b as ServerPrx;
            if(r == null)
            {
                ServerPrxHelper h = new ServerPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static ServerPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            ServerPrxHelper h = new ServerPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Ice::Object",
            "::Lego::Server"
        };

        public static string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new ServerDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new ServerDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, ServerPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static ServerPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                ServerPrxHelper result = new ServerPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public sealed class BoatPrxHelper : Ice.ObjectPrxHelperBase, BoatPrx
    {
        #region Synchronous operations

        public void addTargetPosition(float latitude, float longitude)
        {
            addTargetPosition(latitude, longitude, null, false);
        }

        public void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            addTargetPosition(latitude, longitude, context__, true);
        }

        private void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __addTargetPosition_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        BoatDel_ del__ = (BoatDel_)delBase__;
                        del__.addTargetPosition(latitude, longitude, context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void moveByButton(string direction)
        {
            moveByButton(direction, null, false);
        }

        public void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            moveByButton(direction, context__, true);
        }

        private void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __moveByButton_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        BoatDel_ del__ = (BoatDel_)delBase__;
                        del__.moveByButton(direction, context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void reset()
        {
            reset(null, false);
        }

        public void reset(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            reset(context__, true);
        }

        private void reset(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __reset_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        BoatDel_ del__ = (BoatDel_)delBase__;
                        del__.reset(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void start()
        {
            start(null, false);
        }

        public void start(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            start(context__, true);
        }

        private void start(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __start_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        BoatDel_ del__ = (BoatDel_)delBase__;
                        del__.start(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void stop()
        {
            stop(null, false);
        }

        public void stop(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            stop(context__, true);
        }

        private void stop(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __stop_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        BoatDel_ del__ = (BoatDel_)delBase__;
                        del__.stop(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Lego.Callback_Boat_addTargetPosition> begin_addTargetPosition(float latitude, float longitude)
        {
            return begin_addTargetPosition(latitude, longitude, null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Boat_addTargetPosition> begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_addTargetPosition(latitude, longitude, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addTargetPosition(latitude, longitude, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_addTargetPosition(latitude, longitude, ctx__, true, cb__, cookie__);
        }

        private const string __addTargetPosition_name = "addTargetPosition";

        public void end_addTargetPosition(Ice.AsyncResult r__)
        {
            end__(r__, __addTargetPosition_name);
        }

        private Ice.AsyncResult<Lego.Callback_Boat_addTargetPosition> begin_addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_addTargetPosition> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_addTargetPosition>(this, __addTargetPosition_name, addTargetPosition_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__addTargetPosition_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeFloat(latitude);
                os__.writeFloat(longitude);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void addTargetPosition_completed__(Lego.Callback_Boat_addTargetPosition cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Boat_moveByButton> begin_moveByButton(string direction)
        {
            return begin_moveByButton(direction, null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Boat_moveByButton> begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_moveByButton(direction, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_moveByButton(string direction, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveByButton(direction, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_moveByButton(direction, ctx__, true, cb__, cookie__);
        }

        private const string __moveByButton_name = "moveByButton";

        public void end_moveByButton(Ice.AsyncResult r__)
        {
            end__(r__, __moveByButton_name);
        }

        private Ice.AsyncResult<Lego.Callback_Boat_moveByButton> begin_moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_moveByButton> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_moveByButton>(this, __moveByButton_name, moveByButton_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__moveByButton_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeString(direction);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void moveByButton_completed__(Lego.Callback_Boat_moveByButton cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Boat_reset> begin_reset()
        {
            return begin_reset(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Boat_reset> begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_reset(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_reset(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_reset(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_reset(ctx__, true, cb__, cookie__);
        }

        private const string __reset_name = "reset";

        public void end_reset(Ice.AsyncResult r__)
        {
            end__(r__, __reset_name);
        }

        private Ice.AsyncResult<Lego.Callback_Boat_reset> begin_reset(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_reset> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_reset>(this, __reset_name, reset_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__reset_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void reset_completed__(Lego.Callback_Boat_reset cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Boat_start> begin_start()
        {
            return begin_start(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Boat_start> begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_start(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_start(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_start(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_start(ctx__, true, cb__, cookie__);
        }

        private const string __start_name = "start";

        public void end_start(Ice.AsyncResult r__)
        {
            end__(r__, __start_name);
        }

        private Ice.AsyncResult<Lego.Callback_Boat_start> begin_start(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_start> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_start>(this, __start_name, start_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__start_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void start_completed__(Lego.Callback_Boat_start cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        public Ice.AsyncResult<Lego.Callback_Boat_stop> begin_stop()
        {
            return begin_stop(null, false, null, null);
        }

        public Ice.AsyncResult<Lego.Callback_Boat_stop> begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_stop(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_stop(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_stop(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_stop(ctx__, true, cb__, cookie__);
        }

        private const string __stop_name = "stop";

        public void end_stop(Ice.AsyncResult r__)
        {
            end__(r__, __stop_name);
        }

        private Ice.AsyncResult<Lego.Callback_Boat_stop> begin_stop(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_stop> result__ = new IceInternal.OnewayOutgoingAsync<Lego.Callback_Boat_stop>(this, __stop_name, stop_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__stop_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void stop_completed__(Lego.Callback_Boat_stop cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static BoatPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            BoatPrx r = b as BoatPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                BoatPrxHelper h = new BoatPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static BoatPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            BoatPrx r = b as BoatPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                BoatPrxHelper h = new BoatPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static BoatPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    BoatPrxHelper h = new BoatPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static BoatPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    BoatPrxHelper h = new BoatPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static BoatPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            BoatPrx r = b as BoatPrx;
            if(r == null)
            {
                BoatPrxHelper h = new BoatPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static BoatPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            BoatPrxHelper h = new BoatPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Ice::Object",
            "::Lego::Boat"
        };

        public static string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new BoatDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new BoatDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, BoatPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static BoatPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                BoatPrxHelper result = new BoatPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Lego
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface ServerDel_ : Ice.ObjectDel_
    {
        string getActualData(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void start(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void stop(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void reset(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public interface BoatDel_ : Ice.ObjectDel_
    {
        void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void start(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void stop(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void reset(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
    }
}

namespace Lego
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public sealed class ServerDelM_ : Ice.ObjectDelM_, ServerDel_
    {
        public void addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("addClient", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    if(id == null)
                    {
                        Ice.Identity tmp__ = new Ice.Identity();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        id.write__(os__);
                    }
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("addTargetPosition", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeFloat(latitude);
                    os__.writeFloat(longitude);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public string getActualData(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("getActualData", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.startReadParams();
                    string ret__;
                    ret__ = is__.readString();
                    og__.endReadParams();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("moveByButton", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(direction);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void reset(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("reset", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("sendActualPosition", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeFloat(latitude);
                    os__.writeFloat(longitude);
                    os__.writeFloat(heading);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void start(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("start", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void stop(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("stop", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public sealed class BoatDelM_ : Ice.ObjectDelM_, BoatDel_
    {
        public void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("addTargetPosition", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeFloat(latitude);
                    os__.writeFloat(longitude);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("moveByButton", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(direction);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void reset(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("reset", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void start(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("start", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void stop(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("stop", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace Lego
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public sealed class ServerDelD_ : Ice.ObjectDelD_, ServerDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void addClient(Ice.Identity id, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "addClient", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.addClient(id, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "addTargetPosition", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.addTargetPosition(latitude, longitude, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public string getActualData(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "getActualData", Ice.OperationMode.Normal, context__);
            string result__ = null;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.getActualData(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "moveByButton", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.moveByButton(direction, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void reset(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "reset", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.reset(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void sendActualPosition(float latitude, float longitude, float heading, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "sendActualPosition", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.sendActualPosition(latitude, longitude, heading, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void start(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "start", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.start(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void stop(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "stop", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Server servant__ = null;
                try
                {
                    servant__ = (Server)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.stop(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public sealed class BoatDelD_ : Ice.ObjectDelD_, BoatDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void addTargetPosition(float latitude, float longitude, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "addTargetPosition", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Boat servant__ = null;
                try
                {
                    servant__ = (Boat)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.addTargetPosition(latitude, longitude, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void moveByButton(string direction, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "moveByButton", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Boat servant__ = null;
                try
                {
                    servant__ = (Boat)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.moveByButton(direction, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void reset(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "reset", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Boat servant__ = null;
                try
                {
                    servant__ = (Boat)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.reset(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void start(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "start", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Boat servant__ = null;
                try
                {
                    servant__ = (Boat)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.start(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void stop(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "stop", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                Boat servant__ = null;
                try
                {
                    servant__ = (Boat)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.stop(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }
}

namespace Lego
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public abstract class ServerDisp_ : Ice.ObjectImpl, Server
    {
        #region Slice operations

        public string getActualData()
        {
            return getActualData(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract string getActualData(Ice.Current current__);

        public void moveByButton(string direction)
        {
            moveByButton(direction, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void moveByButton(string direction, Ice.Current current__);

        public void addTargetPosition(float latitude, float longitude)
        {
            addTargetPosition(latitude, longitude, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void addTargetPosition(float latitude, float longitude, Ice.Current current__);

        public void sendActualPosition(float latitude, float longitude, float heading)
        {
            sendActualPosition(latitude, longitude, heading, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void sendActualPosition(float latitude, float longitude, float heading, Ice.Current current__);

        public void addClient(Ice.Identity id)
        {
            addClient(id, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void addClient(Ice.Identity id, Ice.Current current__);

        public void start()
        {
            start(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void start(Ice.Current current__);

        public void stop()
        {
            stop(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void stop(Ice.Current current__);

        public void reset()
        {
            reset(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void reset(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Ice::Object",
            "::Lego::Server"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[1];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[1];
        }

        public static new string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus getActualData___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            string ret__ = obj__.getActualData(current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeString(ret__);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus moveByButton___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string direction;
            direction = is__.readString();
            inS__.endReadParams();
            obj__.moveByButton(direction, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addTargetPosition___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            float latitude;
            float longitude;
            latitude = is__.readFloat();
            longitude = is__.readFloat();
            inS__.endReadParams();
            obj__.addTargetPosition(latitude, longitude, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus sendActualPosition___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            float latitude;
            float longitude;
            float heading;
            latitude = is__.readFloat();
            longitude = is__.readFloat();
            heading = is__.readFloat();
            inS__.endReadParams();
            obj__.sendActualPosition(latitude, longitude, heading, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addClient___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Ice.Identity id;
            id = null;
            if(id == null)
            {
                id = new Ice.Identity();
            }
            id.read__(is__);
            inS__.endReadParams();
            obj__.addClient(id, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus start___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.start(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus stop___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.stop(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus reset___(Server obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.reset(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addClient",
            "addTargetPosition",
            "getActualData",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "moveByButton",
            "reset",
            "sendActualPosition",
            "start",
            "stop"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addClient___(this, inS__, current__);
                }
                case 1:
                {
                    return addTargetPosition___(this, inS__, current__);
                }
                case 2:
                {
                    return getActualData___(this, inS__, current__);
                }
                case 3:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 7:
                {
                    return moveByButton___(this, inS__, current__);
                }
                case 8:
                {
                    return reset___(this, inS__, current__);
                }
                case 9:
                {
                    return sendActualPosition___(this, inS__, current__);
                }
                case 10:
                {
                    return start___(this, inS__, current__);
                }
                case 11:
                {
                    return stop___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5.1")]
    public abstract class BoatDisp_ : Ice.ObjectImpl, Boat
    {
        #region Slice operations

        public void moveByButton(string direction)
        {
            moveByButton(direction, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void moveByButton(string direction, Ice.Current current__);

        public void addTargetPosition(float latitude, float longitude)
        {
            addTargetPosition(latitude, longitude, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void addTargetPosition(float latitude, float longitude, Ice.Current current__);

        public void start()
        {
            start(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void start(Ice.Current current__);

        public void stop()
        {
            stop(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void stop(Ice.Current current__);

        public void reset()
        {
            reset(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void reset(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Ice::Object",
            "::Lego::Boat"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[1];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[1];
        }

        public static new string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus moveByButton___(Boat obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            string direction;
            direction = is__.readString();
            inS__.endReadParams();
            obj__.moveByButton(direction, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus addTargetPosition___(Boat obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            float latitude;
            float longitude;
            latitude = is__.readFloat();
            longitude = is__.readFloat();
            inS__.endReadParams();
            obj__.addTargetPosition(latitude, longitude, current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus start___(Boat obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.start(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus stop___(Boat obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.stop(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus reset___(Boat obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.reset(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "addTargetPosition",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "moveByButton",
            "reset",
            "start",
            "stop"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return addTargetPosition___(this, inS__, current__);
                }
                case 1:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 2:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 3:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 5:
                {
                    return moveByButton___(this, inS__, current__);
                }
                case 6:
                {
                    return reset___(this, inS__, current__);
                }
                case 7:
                {
                    return start___(this, inS__, current__);
                }
                case 8:
                {
                    return stop___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), -1, true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        #endregion
    }
}
